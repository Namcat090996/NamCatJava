/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project_qlsinhvien;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell Precision 7550
 */
public class fmRevDiemThi extends javax.swing.JFrame {

    /**
     * Creates new form fmRevDanhSachSV
     */
    public fmRevDiemThi() {
	initComponents();
    }
    
    //Khai báo mã sinh viên cần chọn để sửa
    private String maSV = "";
    private String maMH = "";
    private String maPH = "";
    
    public String getMaSV() {
	return maSV;
    }

    public void setMaSV(String maSV) {
	this.maSV = maSV;
    }

    public String getMaMH() {
        return maMH;
    }

    public void setMaMH(String maMH) {
        this.maMH = maMH;
    }        

    public String getMaPH() {
        return maPH;
    }

    public void setMaPH(String maPH) {
        this.maPH = maPH;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        btnCapNhat = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cboTenMonHoc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboTenPhongHoc = new javax.swing.JComboBox<>();
        jDateChooserNgayThi = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtDiemThi = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhập thông tin điểm thi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setText("Mã SV:");

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        jLabel8.setText("Môn học:");

        cboTenMonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TenMonHoc" }));

        jLabel3.setText("Phòng học:");

        cboTenPhongHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TenPhongHoc" }));

        jLabel7.setText("Ngày thi:");

        jLabel9.setText("Điểm thi:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboTenMonHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHoTen))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jDateChooserNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDiemThi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cboTenPhongHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCapNhat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDong)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboTenMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboTenPhongHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jDateChooserNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiemThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhat)
                    .addComponent(btnDong))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        //Khai báo biến
        String maMH = "", maPH = "", strDiemThi = "";
        float diemThi = 0;
        
        //Gọi hàm hiển thị chi tiết
        DiemThiBus diemThiBus = new DiemThiBus();       
        
        //Lấy thông tin trên giao diện
        strDiemThi = txtDiemThi.getText();
        //Môn học
        MonHoc objMH = (MonHoc)cboTenMonHoc.getSelectedItem();
        
        if(objMH != null)
        {
            maMH = objMH.getMaMH().trim();
        }
        
        //Phòng học
        PhongHoc objPH = (PhongHoc)cboTenPhongHoc.getSelectedItem();
        
        if(objPH != null)
        {
            maPH = objPH.getMaPH().trim();
        }
        
        //Bắt lỗi khi người dùng chưa nhập đủ thông tin
        if(strDiemThi.length() == 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn cần nhập điểm thi");
            txtDiemThi.requestFocus();
            return;            
        }        
        
        //Bắt lỗi khi người dùng nhập kí tự chữ cái vào trường điểm thi
        try {
            diemThi = Float.parseFloat(strDiemThi);
        } catch (NumberFormatException e) {
            System.err.println("Có lỗi xảy ra. Chi tiết lỗi: " + e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Điểm thi phải là giá trị kiểu số");
            return;
        }
        
        //Khai báo đối tượng
        DiemThi objDiem = new DiemThi();       
        
        //Gán giá trị vào đối tượng
        objDiem.setMaSV(this.maSV);
        if(objMH != null)
        {
            objDiem.setMaMH(maMH);    
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Thông tin môn học không được để trống. Yêu cầu cập nhật", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        objDiem.setNgayThi(jDateChooserNgayThi.getDate());
        objDiem.setDiemThi(diemThi);
        if(objPH != null)
        {
            objDiem.setMaPhong(maPH);   
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Thông tin phòng học không được để trống. Yêu cầu cập nhật", "Warning", JOptionPane.ERROR_MESSAGE);
            return;            
        }

        //Khai báo kết quả trả về và kiểm tra trùng
        boolean ketQua, kiemTraTrung;
        
        //Gọi hàm kiểm tra trùng
        kiemTraTrung = diemThiBus.kiemTraTrungDiem(this.maSV, maMH);
        
        if(!this.maSV.isEmpty() && !this.maMH.isEmpty())//TH sửa
        {
            ketQua = diemThiBus.capNhatDiem(objDiem, this.maMH);
            if(ketQua)
            {
                JOptionPane.showMessageDialog(rootPane, "Cập nhật điểm sinh viên thành công");
            }
            else
            {
                if(kiemTraTrung == false)
                {
                    JOptionPane.showMessageDialog(rootPane, "Điểm của sinh viên cho môn học này đã tồn tại. Vui lòng thử lại");
                    return;                       
                }           
            }
        }
        else//TH thêm mới
        {
	    if(kiemTraTrung == true)
	    {
		ketQua = diemThiBus.themMoiDiem(objDiem);
                if(ketQua)
                {
                    JOptionPane.showMessageDialog(rootPane, "Thêm mới điểm sinh viên thành công");
                }                		
	    }
	    else
	    {
		JOptionPane.showMessageDialog(rootPane, "Điểm của sinh viên cho môn học này đã tồn tại. Vui lòng thử lại");
		return;		
	    }            
        }
        
        if(ketQua)
        {
            fmDSDiemThi.hienThiDanhSachDiem();
        }	
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        //Đóng cửa sổ hiện thời
        this.setVisible(false);
    }//GEN-LAST:event_btnDongActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
	//Gọi hàm hiển thị chi tiết khoa
	hienThiDanhSachMonHoc();
        hienThiDanhSachPhongHoc();
	
	//Gọi hàm sửa/thêm mới thông tin sinh viên
	if(!this.maSV.isEmpty() && !this.maMH.isEmpty())
	{
	    this.setTitle("Sửa điểm số sinh viên");
	    //Gọi hàm hiển thị chi tiết sinh viên
	    hienThiSuaDiemSV();
	}
	else
	{
	    this.setTitle("Thêm mới điểm số sinh viên");
	    //Gọi hàm hiển thị chi tiết sinh viên
	    hienThiThemMoiDiemSV();
	}	
    }//GEN-LAST:event_formWindowOpened

    /**
     * Hàm hiển thị form sửa điểm sinh viên
     */
    public void hienThiSuaDiemSV()
    {       
	//Khai báo đối tượng 
        DiemThiBus diemThiBus = new DiemThiBus();
	SinhVienBus sinhVienBus = new SinhVienBus();
        MonHocBus monHocBus = new MonHocBus();
        PhongHocBus phongHocBus = new PhongHocBus();
	
	//Gọi hàm hiển thị chi tiết         
        DiemThi objDiem = diemThiBus.layChiTietDiemSV(this.maSV, this.maMH);
	SinhVien objSV = sinhVienBus.layChiTietSV(objDiem.getMaSV());
        MonHoc objMH = monHocBus.layChiTietMH(objDiem.getMaMH());
        PhongHoc objPH = phongHocBus.layChiTietPH(objDiem.getMaPhong());
        
	//Gán giá trị vào textfield
	if(objDiem != null)
	{
	    txtMaSV.setText(this.maSV);
            txtMaSV.setEditable(false);
            txtHoTen.setText(objSV.getHoTen());
            txtHoTen.setEditable(false);
            
            if(objMH != null)
            {
                cboTenMonHoc.getModel().setSelectedItem(objMH);
            }
            
            if(objPH != null)
            {
                cboTenPhongHoc.getModel().setSelectedItem(objPH);
            }
            
	    if(objDiem.getNgayThi() != null)
	    {
		jDateChooserNgayThi.setDate(objDiem.getNgayThi());
	    }   
            
            txtDiemThi.setText("" + objDiem.getDiemThi());
	}        
    }
    
    /**
     * Hàm hiển thị form thêm mới điểm sinh viên
     */
    public void hienThiThemMoiDiemSV()
    {        
	//Khai báo đối tượng 
	SinhVienBus sinhVienBus = new SinhVienBus();
        	
	//Gọi hàm hiển thị chi tiết         
	SinhVien objSV = sinhVienBus.layChiTietSV(this.maSV);
        
	//Gán giá trị vào textfield
	if(objSV != null)
	{
	    txtMaSV.setText(this.maSV);
            txtHoTen.setText(objSV.getHoTen());
            txtMaSV.setEditable(false);
            txtHoTen.setEditable(false);
	}        
    }    
    
    /**
     * Hàm hiển thị danh sách môn học
     */
    public void hienThiDanhSachMonHoc()
    {
	//Khai báo object
	MonHocBus monHocBus = new MonHocBus();
	
	//Gọi hàm lấy danh sách 
	List<MonHoc> lstMH = monHocBus.layDanhSachMH();	
	
	//Khai báo model để hiển thị lên combobox
	DefaultComboBoxModel model = new DefaultComboBoxModel();
	
	//Gán object vào model
	for(MonHoc objMH: lstMH)
	{
	    model.addElement(objMH);         
	}
       
	//Render để hiển thị tên khoa trên combobox
	cboTenMonHoc.setRenderer(new MonHocRender());
	
	//Set model lên combobox
	cboTenMonHoc.setModel(model);
    }
    
    /**
     * Hàm hiển thị danh sách phòng học
     */
    public void hienThiDanhSachPhongHoc()
    {
	//Khai báo object
	PhongHocBus phongHocBus = new PhongHocBus();
	
	//Gọi hàm lấy danh sách 
	List<PhongHoc> lstPH = phongHocBus.layDanhSachPH();
	
	//Khai báo model để hiển thị lên combobox
	DefaultComboBoxModel model = new DefaultComboBoxModel();
	
	//Gán object vào model
	for(PhongHoc objPH: lstPH)
	{
	    model.addElement(objPH);         
	}
       
	//Render để hiển thị tên khoa trên combobox
	cboTenPhongHoc.setRenderer(new PhongHocRender());
	
	//Set model lên combobox
	cboTenPhongHoc.setModel(model);
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(fmRevDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(fmRevDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(fmRevDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(fmRevDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		new fmRevDiemThi().setVisible(true);
	    }
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnDong;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboTenMonHoc;
    private javax.swing.JComboBox<String> cboTenPhongHoc;
    private com.toedter.calendar.JDateChooser jDateChooserNgayThi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtDiemThi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    // End of variables declaration//GEN-END:variables
}
